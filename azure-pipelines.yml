trigger:
  branches:
    include:
      - main
      - feature/*

pool: 'yaml-pipeline'

variables:
  servicename: 'new-todo-app-yaml-pipeline'
  path: '$(System.DefaultWorkingDirectory)/todo_infra_env'

steps:
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformTask@5
  displayName: terraform init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: $(path)
    backendServiceArm: $(serviceName)
    backendAzureRmStorageAccountName: 'storagesliku24072025'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfsate'

- task: TerraformTask@5
  displayName: terraform validate
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: $(path)

- task: TerraformTask@5
  displayName: terraform fmt
  inputs:
    provider: 'azurerm'
    command: 'custom'
    workingDirectory: $(path)
    outputTo: 'console'
    customCommand: 'fmt'
    environmentServiceNameAzureRM: $(serviceName)

- task: TerraformTask@5
  displayName: terraform plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: $(path)
    environmentServiceNameAzureRM: $(serviceName)

- task: TerraformTask@5
  displayName: terraform apply
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: $(path)
    environmentServiceNameAzureRM: $(serviceName)